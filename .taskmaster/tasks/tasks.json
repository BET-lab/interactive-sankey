{
  "master": {
    "tasks": [
      {
        "id": "1",
        "title": "프로젝트 구조 및 기본 HTML 파일 생성",
        "description": "Interactive Sankey 다이어그램을 위한 기본 HTML 구조와 필요한 파일들을 생성",
        "status": "done",
        "priority": "high",
        "dependencies": [],
        "details": "- 단일 HTML 파일 생성\n- D3.js 라이브러리 CDN 링크 추가\n- 기본 HTML/CSS 구조 설정\n- 빈 JavaScript 섹션 준비",
        "testStrategy": "HTML 파일이 브라우저에서 로드되고 D3.js가 올바르게 로드되는지 확인"
      },
      {
        "id": "2",
        "title": "JSON 데이터 구조 정의 및 샘플 데이터 생성",
        "description": "Sankey 다이어그램을 위한 JSON 데이터 포맷을 정의하고 테스트용 샘플 데이터를 생성",
        "status": "done",
        "priority": "high",
        "dependencies": [
          "1"
        ],
        "details": "- nodes와 links 구조를 포함한 JSON 스키마 정의\n- 노드 스타일링 메타데이터 포함\n- 링크 gradient 설정 포함\n- 다층 구조의 샘플 데이터 생성",
        "testStrategy": "JSON 데이터가 유효하고 파싱 가능한지 검증"
      },
      {
        "id": "3",
        "title": "D3-Sankey 레이아웃 기본 구현",
        "description": "D3.js와 d3-sankey 플러그인을 사용하여 기본 Sankey 다이어그램 레이아웃을 구현",
        "status": "done",
        "priority": "high",
        "dependencies": [
          "2"
        ],
        "details": "- d3-sankey 플러그인 로드 ✅\n- JSON 데이터 읽기 기능 구현 ✅\n- 기본 노드와 링크 렌더링 ✅\n- SVG 컨테이너 설정 ✅\n- d3-sankey 데이터 포맷 문제 해결 완료 ✅\n\n**Bug Fixes Completed:**\n1. 링크가 안보임 문제 해결 - Progressive disclosure 로직 개선으로 초기 노드들 간 링크 자동 표시\n2. 노드 클릭 시 떨림 문제 해결 - 애니메이션 중 이벤트 처리 개선 및 CSS hover 효과 제거\n3. 첫 번째-두 번째 노드 간 링크 누락 문제 해결 - revealConnectedNodes에서 클릭된 노드와 새로 추가되는 노드들 간의 직접적인 링크를 명시적으로 찾아 추가하는 로직 개선\n4. **D3 Sankey 데이터 매핑 문제 해결** - updateVisibility에서 D3 처리된 링크 데이터(source/target이 객체 또는 인덱스)와 원본 데이터(문자열 ID) 간의 매핑 로직을 개선. 디버깅 로그 추가로 링크 가시성 추적 가능.\n\n**Current Status:** 링크 매핑 로직 개선 완료. 디버깅 로그로 실시간 확인 가능. 다음 태스크로 진행 가능.",
        "testStrategy": "기본 Sankey 다이어그램이 화면에 표시되는지 확인"
      },
      {
        "id": "4",
        "title": "노드 스타일링 및 SVG 아이콘 시스템 구현",
        "description": "노드의 커스텀 스타일링과 SVG 아이콘을 표시하는 시스템을 구현",
        "status": "done",
        "priority": "medium",
        "dependencies": [
          "3"
        ],
        "details": "- 노드를 원형으로 변경 (기존 사각형에서) ✅\n- SVG 아이콘 렌더링 시스템 ✅\n- 원형 노드 중앙에 아이콘 배치 ✅\n- 노드 라벨을 원형 노드 아래로 이동 ✅\n- 그림자 효과 및 스타일링 개선 ✅\n- 업로드된 이미지 스타일과 일치하도록 구현 ✅\n\n**완료된 개선사항:**\n- 사각형 노드 → 원형 노드로 변경\n- 30px 반지름의 고정 크기 원형 노드\n- 중앙 정렬된 SVG 아이콘\n- 원형 노드 아래 라벨 배치\n- CSS 그림자 효과 추가\n\n**사용자 피드백 반영 완료 (2025-01-12):**\n\n사용자가 제기한 3가지 주요 문제점을 모두 해결했습니다:\n\n1. **배경색 변경**: 보라색 배경을 흰색으로 변경하고 모든 텍스트와 UI 요소들을 어두운 색상으로 조정\n2. **가변 두께 리본 구현**: D3 기본 sankeyLinkHorizontal 대신 커스텀 createVariableWidthLink 함수를 만들어 진정한 가변 두께 리본 구현\n3. **리본 연결 개선**: 리본이 노드의 중심에서 자연스럽게 시작하도록 좌표 계산 수정\n\n**주요 변경사항:**\n- 전체 UI 테마를 흰색 배경으로 변경 (body, header, controls, labels 등)\n- 커스텀 링크 생성 함수로 베지어 곡선과 세그먼트 기반 가변 두께 구현\n- stroke 대신 fill을 사용하여 더 부드러운 가변 두께 효과\n- 노드 중심에서 리본이 시작하도록 좌표 계산 개선\n- 노드 라벨 색상을 검은색으로 변경하여 흰색 배경에서 가독성 확보\n\n**기술적 구현:**\n- createVariableWidthLink() 함수로 20개 세그먼트 기반 베지어 곡선 생성\n- 각 세그먼트마다 width 값을 선형 보간하여 자연스러운 두께 변화\n- 상하 곡선을 연결하여 닫힌 경로(Z) 생성으로 fill 가능한 형태 구현",
        "testStrategy": "노드가 지정된 스타일과 아이콘으로 표시되는지 확인"
      },
      {
        "id": "5",
        "title": "링크 그라디언트 및 스타일링 구현",
        "description": "노드 간 연결 링크에 그라디언트 효과와 커스텀 스타일링을 적용",
        "status": "done",
        "priority": "medium",
        "dependencies": [
          "4"
        ],
        "details": "- SVG 그라디언트 정의 생성 ✅\n- 링크별 그라디언트 색상 적용 ✅\n- 링크 두께를 value 기반 가변으로 변경 ✅\n- 호버 효과 추가 ✅\n- 부드러운 링크 스타일링 (rounded caps) ✅\n\n**완료된 개선사항:**\n- 각 링크별 고유 그라디언트 색상\n- value 기반 가변 두께 (2px ~ 20px)\n- 부드러운 라인 캡 및 조인\n- 마우스오버 시 투명도 증가 효과\n- 업로드된 이미지와 유사한 굵기 스케일링\n\n**가변 두께 리본 구현 완료 (2025-01-12):**\n- 커스텀 createVariableWidthLink() 함수로 완전한 가변 두께 리본 구현\n- 베지어 곡선 기반 20개 세그먼트로 부드러운 두께 변화\n- stroke에서 fill로 변경하여 더 자연스러운 가변 두께 효과\n- 노드 중심에서 시작하는 정확한 좌표 계산",
        "testStrategy": "링크가 그라디언트 색상으로 표시되고 인터랙션이 작동하는지 확인"
      },
      {
        "id": "6",
        "title": "프로그레시브 디스클로저 인터랙션 구현",
        "description": "초기에는 왼쪽 노드만 표시하고 클릭 시 연결된 노드들을 점진적으로 공개하는 기능을 구현",
        "status": "pending",
        "priority": "high",
        "dependencies": [
          "5"
        ],
        "details": "- 초기 상태: 첫 번째 레벨 노드만 표시\n- 다른 노드들은 숨김 또는 투명 처리\n- 노드 클릭 이벤트 핸들링\n- 연결된 노드와 링크 표시 로직",
        "testStrategy": "초기 상태에서 왼쪽 노드만 보이고 클릭 시 다음 노드들이 나타나는지 확인"
      },
      {
        "id": "7",
        "title": "애니메이션 및 트랜지션 효과 구현",
        "description": "노드 클릭 시 부드러운 애니메이션과 트랜지션 효과를 구현",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "6"
        ],
        "details": "- 노드 페이드 인/아웃 애니메이션\n- 링크 그로우 인 효과\n- 부드러운 색상 트랜지션\n- 애니메이션 타이밍 최적화",
        "testStrategy": "모든 인터랙션이 부드러운 애니메이션과 함께 동작하는지 확인"
      },
      {
        "id": "8",
        "title": "최종 통합 테스트 및 성능 최적화",
        "description": "전체 시스템을 통합하여 테스트하고 성능을 최적화",
        "status": "pending",
        "priority": "medium",
        "dependencies": [
          "7"
        ],
        "details": "- 모든 기능 통합 테스트\n- 브라우저 호환성 확인\n- 성능 최적화\n- 코드 정리 및 주석 추가\n- 최종 검증",
        "testStrategy": "완전한 Interactive Sankey 다이어그램이 모든 요구사항을 만족하는지 확인"
      }
    ],
    "metadata": {
      "version": "1.0.0",
      "created": "2025-01-12",
      "lastModified": "2025-01-12",
      "totalTasks": 8
    }
  }
}